- name: exam for middle test for MTOS
  hosts: localhost

  tasks:
    - name: enable to EPEL repository
      package:
        name: epel-release
        state: present

    - name: install exam package
      package:
        name: "{{ item }}"
        state: present
      loop:
        - ddrescue
        - httpd

    - name: root and exam password changed and disabled
      user:
        name: "{{ item }}"
        password: "{{ random_password | lookup('community.general.random_string', length=12) }}"
      loop:
        - root
        - exam

    - name: verify to network devices
      shell: nmcli dev | awk '{ print $1 }' | grep eth
      register: count_dev

    - fail:
        msg: The VM has under 3 NIC device card.
      when: register_stdout < 3

    - name: setup up bad block device as loopback device
      shell: |
        dd if=/dev/urandom of=/tmp/file bs=500M count=4 status=progress &&
        sha256sum /tmp/file &&
        loopdev=$(losetup -f --show /tmp/file) &&
        echo $loopdev &&
        dmsetup create file1 << EOF
        0  2048 linear $loopdev 0
        2048  4096 error
        6144  26624 linear $loopdev 6144
        EOF &&
        dmsetup create file2 << EOF
        0  30720 linear $loopdev 0
        30720  2048 error
        EOF &&
        dd if=/dev/mapper/file1 of=/dev/null count=2048 &&
        dd if=/dev/mapper/file1 of=/dev/null count=2049 &&
        dd if=/dev/mapper/file2 of=/dev/null count=30720 &&
        dd if=/dev/mapper/file2 of=/dev/null count=30721 &&
        ddrescue -B -v -n /dev/mapper/file1 /tmp/file1 /tmp/log &&
        ddrescue -B -v -c 16 -r 2 /dev/mapper/file2 /tmp/file1 /tmp/log &&
        ddrescue -B -v -c 16 -r 2 /dev/mapper/file1 /tmp/file1 /tmp/log

    - name: create a partition on /dev/sdb
      parted: 
        device: /dev/sdb
        number: "{{ item.number }}"
        state: present
        part_end: "{{ item.size }}"
        flags: [ lvm2 ]
      loop:
        - { number: 1, size: 1G }
        - { number: 2, size: 1G }
        - { number: 3, size: 1G }

    - name: set to LVM2 partition
      filesytstem:
        fstype: lvm

    - name: create VG resource in LVM2
      lvg:
        vg: testvg
        pvs: /dev/sdb1, /dev/sdb2, /dev/sdb3

    - name: create LV resource in LVM2
      lvol:
        vg: testvg
        lv: testlv
        size: 100%Free

    - name: build filesystem as xfs
      filesystem:
        dev: /dev/testvg/testlv
        fstype: xfs

    - name: mount and make a sample data
      mount:
        path: /mnt/testlv
        src: /dev/testvg/testlv
        fstype: xfs
        state: present

    - name: dump LVM2 VG metadata
      shell: dd if=/dev/sdc of=/root/lvm_backup_pv.pv bs=1024 count=1

    - name: dump xfs metadata
      shell: xfs_metadump /dev/sdb /root/sdb_block_meta.backup

    - name: make a damaged to the metadata area

    - name: make a dummy data on /dev/testvg/testlv
      shell: dd if=/dev/random of=/mnt/testlv/dummy.data bs=500M count=4

    - name: make httpd.service going to be wrong XD
      block:
        - name: htdocs root
          lineinfile:
            path: /etc/httpd/conf/httpd.conf
            regexp: ^DocumentRoot
            line: DocumentRoot: /htdocs
        - name: httpd port
            path: /etc/httpd/conf/httpd.conf
            search_straing: 'Listen: 80'
            line: 'DocumentRoot: 18888'